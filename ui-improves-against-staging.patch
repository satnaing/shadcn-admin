diff --git a/src/context/theme-provider.tsx b/src/context/theme-provider.tsx
index 9675b4d..c0d04ae 100644
--- a/src/context/theme-provider.tsx
+++ b/src/context/theme-provider.tsx
@@ -4,7 +4,7 @@ import { getCookie, setCookie, removeCookie } from '@/lib/cookies'
 type Theme = 'dark' | 'light' | 'system'
 type ResolvedTheme = Exclude<Theme, 'system'>
 
-const DEFAULT_THEME = 'system'
+const DEFAULT_THEME = 'light'
 const THEME_COOKIE_NAME = 'vite-ui-theme'
 const THEME_COOKIE_MAX_AGE = 60 * 60 * 24 * 365 // 1 year
 
@@ -38,16 +38,12 @@ export function ThemeProvider({
   storageKey = THEME_COOKIE_NAME,
   ...props
 }: ThemeProviderProps) {
-  const [theme, _setTheme] = useState<Theme>(
-    () => (getCookie(storageKey) as Theme) || defaultTheme
-  )
+  const [theme, _setTheme] = useState<Theme>(() => (getCookie(storageKey) as Theme) || defaultTheme)
 
   // Optimized: Memoize the resolved theme calculation to prevent unnecessary re-computations
   const resolvedTheme = useMemo((): ResolvedTheme => {
     if (theme === 'system') {
-      return window.matchMedia('(prefers-color-scheme: dark)').matches
-        ? 'dark'
-        : 'light'
+      return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light'
     }
     return theme as ResolvedTheme
   }, [theme])
diff --git a/src/features/activity/components/executions-table.tsx b/src/features/activity/components/executions-table.tsx
index b348eb7..008f82c 100644
--- a/src/features/activity/components/executions-table.tsx
+++ b/src/features/activity/components/executions-table.tsx
@@ -25,6 +25,7 @@ import { executionsColumns as columns } from '../data/executions-columns'
 import { type Execution } from '../data/schema'
 import { DataTablePagination } from './data-table-pagination'
 import { DataTableToolbar } from './data-table-toolbar'
+import { useExecutions } from './executions-provider'
 
 const route = getRouteApi('/activity/')
 
@@ -34,6 +35,8 @@ type DataTableProps = {
 }
 
 export function ExecutionsTable({ data, playbooks = [] }: DataTableProps) {
+  const { setOpen, setCurrentExecution } = useExecutions()
+
   // Local UI-only states
   const [rowSelection, setRowSelection] = useState({})
   const [sorting, setSorting] = useState<SortingState>([
@@ -53,7 +56,7 @@ export function ExecutionsTable({ data, playbooks = [] }: DataTableProps) {
   } = useTableUrlState({
     search: route.useSearch(),
     navigate: route.useNavigate(),
-    pagination: { defaultPage: 1, defaultPageSize: 10 },
+    pagination: { defaultPage: 1, defaultPageSize: 20 },
     globalFilter: { enabled: true, key: 'filter' },
     columnFilters: [
       { columnId: 'status', searchKey: 'status', type: 'string' },
@@ -134,9 +137,27 @@ export function ExecutionsTable({ data, playbooks = [] }: DataTableProps) {
           <TableBody>
             {table.getRowModel().rows?.length ? (
               table.getRowModel().rows.map((row) => (
-                <TableRow key={row.id} data-state={row.getIsSelected() && 'selected'}>
+                <TableRow
+                  key={row.id}
+                  data-state={row.getIsSelected() && 'selected'}
+                  className='hover:bg-muted/50 cursor-pointer'
+                  onClick={(e) => {
+                    // Don't trigger when clicking on the actions column or its children
+                    const target = e.target as HTMLElement
+                    const actionsCell = target.closest('[data-column-id="actions"]')
+                    if (!actionsCell) {
+                      const execution = row.original as Execution
+                      setCurrentExecution(execution)
+                      setOpen('view')
+                    }
+                  }}
+                >
                   {row.getVisibleCells().map((cell) => (
-                    <TableCell key={cell.id}>
+                    <TableCell
+                      key={cell.id}
+                      data-column-id={cell.column.id}
+                      className={cell.column.id === 'result' ? 'whitespace-normal' : undefined}
+                    >
                       {flexRender(cell.column.columnDef.cell, cell.getContext())}
                     </TableCell>
                   ))}
diff --git a/src/features/activity/data/executions-columns.tsx b/src/features/activity/data/executions-columns.tsx
index 90c6f50..2abf5e1 100644
--- a/src/features/activity/data/executions-columns.tsx
+++ b/src/features/activity/data/executions-columns.tsx
@@ -1,8 +1,8 @@
 import { format } from 'date-fns'
 import { type ColumnDef } from '@tanstack/react-table'
-import { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from '@/components/ui/tooltip'
 import { DataTableColumnHeader } from '../components/data-table-column-header'
 import { DataTableRowActions } from '../components/data-table-row-actions'
+import { parseSlackMarkdown } from '../utils/slack-markdown-parser'
 import { executionStatuses } from './data'
 import { type Execution } from './schema'
 
@@ -152,32 +152,9 @@ export const executionsColumns: ColumnDef<Execution>[] = [
         return <span className='text-muted-foreground'>No summary</span>
       }
 
-      const truncated = summary.length > 80 ? `${summary.substring(0, 80)}...` : summary
-
-      return (
-        <TooltipProvider>
-          <Tooltip>
-            <TooltipTrigger asChild>
-              <span className='max-w-[300px] cursor-default'>{truncated}</span>
-            </TooltipTrigger>
-            {summary.length > 80 && (
-              <TooltipContent className='max-w-[400px] whitespace-pre-wrap'>
-                {summary}
-              </TooltipContent>
-            )}
-          </Tooltip>
-        </TooltipProvider>
-      )
-    },
-  },
-  {
-    accessorKey: 'completedAt',
-    header: ({ column }) => <DataTableColumnHeader column={column} title='Completed At' />,
-    cell: ({ row }) => {
-      const completedAt = row.getValue('completedAt') as string | null
       return (
-        <div className='w-[160px]'>
-          {completedAt ? format(new Date(completedAt), 'MMM d, yyyy HH:mm') : '-'}
+        <div className='w-[400px]'>
+          <div className='text-sm break-words whitespace-normal'>{parseSlackMarkdown(summary)}</div>
         </div>
       )
     },
diff --git a/src/features/knowledge/general/index.tsx b/src/features/knowledge/general/index.tsx
index f87467a..3338de1 100644
--- a/src/features/knowledge/general/index.tsx
+++ b/src/features/knowledge/general/index.tsx
@@ -131,7 +131,7 @@ export default function GeneralKnowledge() {
                     <FormControl>
                       <Textarea
                         placeholder='Describe what your organization does...'
-                        className='min-h-[120px]'
+                        className='min-h-[220px]'
                         {...field}
                       />
                     </FormControl>
diff --git a/src/features/knowledge/icp/index.tsx b/src/features/knowledge/icp/index.tsx
index 0fbac22..ba07e04 100644
--- a/src/features/knowledge/icp/index.tsx
+++ b/src/features/knowledge/icp/index.tsx
@@ -1,9 +1,8 @@
 import { useState } from 'react'
 import { useNavigate } from '@tanstack/react-router'
 import { TargetMarketType } from '@/graphql/global/types.generated'
-import { Building2, Users, DollarSign, Globe, Plus, MoreVertical, Trash2 } from 'lucide-react'
+import { Building2, Users, DollarSign, Plus, MoreVertical, Trash2 } from 'lucide-react'
 import { toast } from 'sonner'
-import { Badge } from '@/components/ui/badge'
 import { Button } from '@/components/ui/button'
 import { Card, CardContent } from '@/components/ui/card'
 import {
@@ -56,7 +55,7 @@ export default function ICPPage() {
     return (
       <Page
         title='Ideal Customer Profiles'
-        description='Define your ideal customer profile'
+        description='Ideal customer profiles help Swan understand what types of companies you are targeting.'
         mainFixed
       >
         <ICPSkeleton />
@@ -66,7 +65,10 @@ export default function ICPPage() {
 
   if (icpProfiles.length === 0) {
     return (
-      <Page title='Ideal Customer Profiles' description='Define your ideal customer profile'>
+      <Page
+        title='Ideal Customer Profiles'
+        description='Ideal customer profiles help Swan understand what types of companies you are targeting.'
+      >
         <EmptyState
           Icon={Building2}
           title='No ICP profiles defined'
@@ -82,7 +84,7 @@ export default function ICPPage() {
   return (
     <Page
       title='Ideal Customer Profiles'
-      description='Define your ideal customer profile'
+      description='Ideal customer profiles help Swan understand what types of companies you are targeting.'
       actions={<AddICPButton icpProfiles={icpProfiles} />}
     >
       <div className='grid grid-cols-1 gap-4 md:grid-cols-2'>
@@ -95,14 +97,9 @@ export default function ICPPage() {
               borderTop: `4px solid ${profile.color ? COLOR_MAP[profile.color] : '#e5e7eb'}`,
             }}
           >
-            <CardContent>
+            <CardContent className='flex h-full flex-col'>
               <div className='mb-4 flex items-start justify-between'>
-                <div>
-                  <h3 className='text-lg font-semibold'>{profile.name}</h3>
-                  <p className='text-muted-foreground text-sm'>
-                    {profile.industry || 'All Industries'}
-                  </p>
-                </div>
+                <h3 className='text-lg font-semibold'>{profile.name}</h3>
                 <DropdownMenu>
                   <DropdownMenuTrigger asChild onClick={(e) => e.stopPropagation()}>
                     <Button variant='ghost' size='icon' className='h-8 w-8'>
@@ -135,46 +132,33 @@ export default function ICPPage() {
                 </DropdownMenu>
               </div>
 
-              <div className='space-y-4 pt-3'>
-                <div className='flex items-center justify-between'>
-                  <DataDisplay
-                    icon={Users}
-                    label={`${profile.minEmployees || '0'} - ${
-                      profile.maxEmployees ? formatNumber(profile.maxEmployees) : 'Unlimited'
-                    }`}
-                  />
-                  <DataDisplay
-                    icon={DollarSign}
-                    label={`${profile.minRevenue ? `$${formatNumber(profile.minRevenue)}` : '$0'} - ${
-                      profile.maxRevenue ? `$${formatNumber(profile.maxRevenue)}` : 'Unlimited'
-                    }`}
-                  />
-                  <DataDisplay icon={Users} label={`${profile.personas?.length || '0'} Personas`} />
-                </div>
+              <div className='flex-1 overflow-hidden'>
+                <p className='text-muted-foreground line-clamp-4 text-sm'>
+                  {profile.extraRequirements || 'No description available'}
+                </p>
+              </div>
 
-                <div className='flex items-center gap-2'>
-                  <Globe className='text-muted-foreground h-4 w-4' />
-                  <div className='flex flex-wrap gap-1'>
-                    {profile.hqLocations?.length ? (
-                      <>
-                        {profile.hqLocations.slice(0, 4).map((location: string) => (
-                          <Badge key={location} variant='secondary' className='text-xs'>
-                            {location}
-                          </Badge>
-                        ))}
-                        {profile.hqLocations.length > 4 && (
-                          <Badge variant='secondary' className='text-xs'>
-                            +{profile.hqLocations.length - 4}
-                          </Badge>
-                        )}
-                      </>
-                    ) : (
-                      <Badge variant='secondary' className='text-xs'>
-                        Global
-                      </Badge>
-                    )}
-                  </div>
-                </div>
+              <div className='mt-auto flex items-center justify-between pt-3'>
+                <DataDisplay
+                  icon={Users}
+                  label={
+                    (!profile.minEmployees || profile.minEmployees === 0) && !profile.maxEmployees
+                      ? 'Any size'
+                      : !profile.maxEmployees
+                        ? `${formatNumber(profile.minEmployees || 0)}+`
+                        : `${formatNumber(profile.minEmployees || 0)} - ${formatNumber(profile.maxEmployees)}`
+                  }
+                />
+                <DataDisplay
+                  icon={DollarSign}
+                  label={
+                    (!profile.minRevenue || profile.minRevenue === 0) && !profile.maxRevenue
+                      ? 'Any revenue'
+                      : !profile.maxRevenue
+                        ? `$${formatNumber(profile.minRevenue || 0)}+`
+                        : `$${formatNumber(profile.minRevenue || 0)} - $${formatNumber(profile.maxRevenue)}`
+                  }
+                />
               </div>
             </CardContent>
           </Card>
diff --git a/src/features/plays/index.tsx b/src/features/plays/index.tsx
index 0528cc4..b2910fa 100644
--- a/src/features/plays/index.tsx
+++ b/src/features/plays/index.tsx
@@ -48,7 +48,10 @@ export default function PlaybooksPage() {
 
   if (loading) {
     return (
-      <Page title='Plays' description='Automate your workflow processes with plays'>
+      <Page
+        title='Plays'
+        description='Intellegent go-to-market routines that help you grow your business'
+      >
         <PlaybooksSkeleton />
       </Page>
     )
@@ -56,7 +59,10 @@ export default function PlaybooksPage() {
 
   if (playbooks.length === 0) {
     return (
-      <Page title='Plays' description='Automate your workflow processes with plays'>
+      <Page
+        title='Plays'
+        description='Intellegent go-to-market routines that help you grow your business'
+      >
         <EmptyState
           Icon={PlayCircle}
           title='No plays created'
@@ -72,7 +78,7 @@ export default function PlaybooksPage() {
   return (
     <Page
       title='Plays'
-      description='Automate your workflow processes with plays'
+      description='Intellegent go-to-market routines that help you grow your business'
       // actions={
       //   <Button onClick={() => navigate({ to: '/plays/new' })}>
       //     <Plus className='mr-2 h-4 w-4' />
diff --git a/src/features/plays/pages/play/components/playbook-triggers.tsx b/src/features/plays/pages/play/components/playbook-triggers.tsx
index 2558424..d4cc159 100644
--- a/src/features/plays/pages/play/components/playbook-triggers.tsx
+++ b/src/features/plays/pages/play/components/playbook-triggers.tsx
@@ -4,6 +4,7 @@ import { Zap, Plus, Users, Eye } from 'lucide-react'
 import { toast } from 'sonner'
 import { Button } from '@/components/ui/button'
 import { Card, CardContent, CardHeader, CardTitle, CardDescription } from '@/components/ui/card'
+import { Skeleton } from '@/components/ui/skeleton'
 import { useTriggersQuery } from '../../../graphql/operations.generated'
 import { TriggerConfigModal } from './trigger-config-modal'
 
@@ -86,8 +87,20 @@ export function PlaybookTriggers({ playbookId }: PlaybookTriggersProps) {
         </CardHeader>
         <CardContent>
           {loading ? (
-            <div className='py-8 text-center'>
-              <p className='text-muted-foreground text-sm'>Loading triggers...</p>
+            <div className='grid grid-cols-1 gap-4 md:grid-cols-2'>
+              {/* Skeleton cards for loading state */}
+              {[1, 2].map((index) => (
+                <div key={index} className='rounded-lg border p-4'>
+                  <div className='flex items-start gap-3'>
+                    <Skeleton className='h-9 w-9 rounded-lg' />
+                    <div className='min-w-0 flex-1 space-y-2'>
+                      <Skeleton className='h-5 w-32' />
+                      <Skeleton className='h-4 w-full' />
+                      <Skeleton className='h-4 w-3/4' />
+                    </div>
+                  </div>
+                </div>
+              ))}
             </div>
           ) : error ? (
             <div className='py-8 text-center'>
diff --git a/src/features/plays/pages/play/index.tsx b/src/features/plays/pages/play/index.tsx
index 81e3474..8e66aaa 100644
--- a/src/features/plays/pages/play/index.tsx
+++ b/src/features/plays/pages/play/index.tsx
@@ -2,10 +2,15 @@ import { useState, useEffect } from 'react'
 import { useParams } from '@tanstack/react-router'
 import { PlayCircle, PauseCircle, Plus, Settings, Layers, FileText } from 'lucide-react'
 import { toast } from 'sonner'
+import {
+  Accordion,
+  AccordionContent,
+  AccordionItem,
+  AccordionTrigger,
+} from '@/components/ui/accordion'
 import { Button } from '@/components/ui/button'
 import { Card, CardContent, CardHeader, CardTitle, CardDescription } from '@/components/ui/card'
 import { Label } from '@/components/ui/label'
-import { Separator } from '@/components/ui/separator'
 import { Textarea } from '@/components/ui/textarea'
 import { EditableText } from '@/components/editable-text'
 import { Page } from '@/components/page'
@@ -178,136 +183,165 @@ export default function PlaybookDetailPage() {
         {/* Triggers Card */}
         <PlaybookTriggers playbookId={playbookId} />
 
-        {/* Playbook Card */}
+        {/* Instructions Card */}
         <Card>
           <CardHeader>
             <div className='flex items-center justify-between'>
               <div>
                 <CardTitle className='mb-2 flex items-center gap-2'>
                   <FileText className='h-5 w-5' />
-                  Playbook
+                  Context
                 </CardTitle>
                 <CardDescription>
-                  Configure the context, instructions, and scenarios for this playbook
+                  Provide context and instructions for this playbook
                 </CardDescription>
               </div>
             </div>
           </CardHeader>
-          <CardContent className='space-y-6'>
-            {/* Context & Instructions Section */}
-            <div className='space-y-4'>
-              <div className='space-y-2'>
-                <Label htmlFor='description'>Context</Label>
-                <Textarea
-                  id='description'
-                  value={description}
-                  onChange={(e) => setDescription(e.target.value)}
-                  placeholder='Explain briefly when this playbook runs and what Swan should be aware of'
-                  className='max-h-[200px] min-h-[100px] resize-none'
-                  disabled={isSavingDescription}
-                />
-              </div>
+          <CardContent className='space-y-4'>
+            <div className='space-y-2'>
+              <Label htmlFor='description'>Play Description</Label>
+              <Textarea
+                id='description'
+                value={description}
+                onChange={(e) => setDescription(e.target.value)}
+                placeholder='Explain briefly when this playbook runs and what Swan should be aware of'
+                className='max-h-[200px] min-h-[100px] resize-none'
+                disabled={isSavingDescription}
+              />
+            </div>
 
-              <div className='space-y-2'>
-                <Label htmlFor='outreach-instructions'>Outreach Instructions</Label>
-                <Textarea
-                  id='outreach-instructions'
-                  value={outreachInstructions}
-                  onChange={(e) => setOutreachInstructions(e.target.value)}
-                  placeholder='Provide specific instructions for outreach messages and communication style'
-                  className='max-h-[200px] min-h-[100px] resize-none'
-                  disabled={isSavingDescription}
-                />
-              </div>
+            <Accordion type='single' collapsible className='w-full'>
+              <AccordionItem value='outreach-instructions'>
+                <AccordionTrigger>Outreach Instructions</AccordionTrigger>
+                <AccordionContent>
+                  <div className='space-y-2'>
+                    <Label htmlFor='outreach-instructions' className='sr-only'>
+                      Outreach Instructions
+                    </Label>
+                    <Textarea
+                      id='outreach-instructions'
+                      value={outreachInstructions}
+                      onChange={(e) => setOutreachInstructions(e.target.value)}
+                      placeholder='Provide specific instructions for outreach messages and communication style'
+                      className='max-h-[200px] min-h-[100px] resize-none'
+                      disabled={isSavingDescription}
+                    />
+                    <p className='text-muted-foreground text-sm'>
+                      Provide specific guidelines for how AI agents should communicate and engage
+                      with prospects
+                    </p>
+                  </div>
+                </AccordionContent>
+              </AccordionItem>
+            </Accordion>
 
-              <div className='flex justify-end'>
-                <Button
-                  size='sm'
-                  onClick={handleUpdateDescription}
-                  disabled={
-                    isSavingDescription ||
-                    updatePlaybookLoading ||
-                    (description.trim() === (playbook.description || '').trim() &&
-                      outreachInstructions.trim() === (playbook.outreachInstructions || '').trim())
-                  }
-                  loading={isSavingDescription}
-                >
-                  Save Changes
-                </Button>
-              </div>
+            <div className='flex justify-end'>
+              <Button
+                size='sm'
+                onClick={handleUpdateDescription}
+                disabled={
+                  isSavingDescription ||
+                  updatePlaybookLoading ||
+                  (description.trim() === (playbook.description || '').trim() &&
+                    outreachInstructions.trim() === (playbook.outreachInstructions || '').trim())
+                }
+                loading={isSavingDescription}
+              >
+                Save Changes
+              </Button>
             </div>
+          </CardContent>
+        </Card>
 
-            <Separator />
-
-            {/* Scenarios Section */}
-            <div className='space-y-3'>
-              <div className='flex items-center justify-between'>
-                <div>
-                  <h4 className='flex items-center gap-2 text-sm font-medium'>
-                    <Layers className='h-4 w-4' />
-                    Scenarios
-                  </h4>
-                  <p className='text-muted-foreground text-sm'>
-                    {playbook.scenarios?.length || 0} scenario
-                    {playbook.scenarios?.length !== 1 ? 's' : ''} configured
-                  </p>
-                </div>
-                <Button size='sm' variant='outline' onClick={() => setCreateScenarioOpen(true)}>
-                  <Plus className='mr-2 h-4 w-4' />
-                  Add Scenario
-                </Button>
+        {/* Action Plan Card */}
+        <Card>
+          <CardHeader>
+            <div className='flex items-center justify-between'>
+              <div>
+                <CardTitle className='mb-2 flex items-center gap-2'>
+                  <Layers className='h-5 w-5' />
+                  Action Plan
+                </CardTitle>
+                <CardDescription>
+                  Define scenarios with conditions and actions. Swan analyzes the situation first,
+                  then executes the matching action plan.
+                </CardDescription>
               </div>
+              <Button size='sm' variant='outline' onClick={() => setCreateScenarioOpen(true)}>
+                <Plus className='mr-2 h-4 w-4' />
+                Add Scenario
+              </Button>
+            </div>
+          </CardHeader>
+          <CardContent>
+            {playbook.scenarios && playbook.scenarios.length > 0 ? (
+              playbook.scenarios.length === 1 ? (
+                // Single scenario: show form directly
+                <ScenarioForm
+                  mode='edit'
+                  scenario={playbook.scenarios[0]}
+                  onSuccess={refetch}
+                  formId='single-scenario-form'
+                  showButtons={true}
+                />
+              ) : (
+                // Multiple scenarios: show cards with modals
+                <div className='grid grid-cols-1 gap-4 md:grid-cols-2'>
+                  {playbook.scenarios.map((scenario) => (
+                    <div
+                      key={scenario.id}
+                      className='hover:bg-accent/50 group cursor-pointer rounded-lg border p-4 transition-colors'
+                      onClick={() => setSelectedScenario(scenario)}
+                    >
+                      <div className='flex items-start justify-between gap-2'>
+                        <div className='min-w-0 flex-1 space-y-3'>
+                          <h4 className='truncate font-medium'>{scenario.name}</h4>
 
-              {playbook.scenarios && playbook.scenarios.length > 0 ? (
-                playbook.scenarios.length === 1 ? (
-                  // Single scenario: show form directly
-                  <ScenarioForm
-                    mode='edit'
-                    scenario={playbook.scenarios[0]}
-                    onSuccess={refetch}
-                    formId='single-scenario-form'
-                    showButtons={true}
-                  />
-                ) : (
-                  // Multiple scenarios: show cards with modals
-                  <div className='grid grid-cols-1 gap-4 md:grid-cols-2'>
-                    {playbook.scenarios.map((scenario) => (
-                      <div
-                        key={scenario.id}
-                        className='hover:bg-accent/50 group cursor-pointer rounded-lg border p-4 transition-colors'
-                        onClick={() => setSelectedScenario(scenario)}
-                      >
-                        <div className='flex items-start justify-between gap-2'>
-                          <div className='min-w-0 flex-1'>
-                            <h4 className='truncate font-medium'>{scenario.name}</h4>
-                            <p className='text-muted-foreground mt-1 line-clamp-2 text-sm'>
-                              {scenario.description || 'No description'}
-                            </p>
+                          <div className='space-y-2'>
+                            <div>
+                              <span className='text-muted-foreground text-xs font-medium tracking-wider uppercase'>
+                                When
+                              </span>
+                              <p className='text-muted-foreground mt-1 line-clamp-2 text-sm'>
+                                {scenario.description || 'No condition defined'}
+                              </p>
+                            </div>
+
+                            <div>
+                              <span className='text-muted-foreground text-xs font-medium tracking-wider uppercase'>
+                                Then
+                              </span>
+                              <p className='text-muted-foreground mt-1 line-clamp-2 text-sm'>
+                                {scenario.actionPlan || 'No action plan defined'}
+                              </p>
+                            </div>
                           </div>
-                          <Button
-                            variant='ghost'
-                            size='icon'
-                            className='h-8 w-8 flex-shrink-0 opacity-0 transition-opacity group-hover:opacity-100'
-                            onClick={(e) => {
-                              e.stopPropagation()
-                              setSelectedScenario(scenario)
-                            }}
-                          >
-                            <Settings className='h-4 w-4' />
-                          </Button>
                         </div>
+                        <Button
+                          variant='ghost'
+                          size='icon'
+                          className='h-8 w-8 flex-shrink-0 opacity-0 transition-opacity group-hover:opacity-100'
+                          onClick={(e) => {
+                            e.stopPropagation()
+                            setSelectedScenario(scenario)
+                          }}
+                        >
+                          <Settings className='h-4 w-4' />
+                        </Button>
                       </div>
-                    ))}
-                  </div>
-                )
-              ) : (
-                <div className='rounded-lg border border-dashed p-8 text-center'>
-                  <p className='text-muted-foreground text-sm'>
-                    No scenarios configured for this playbook yet.
-                  </p>
+                    </div>
+                  ))}
                 </div>
-              )}
-            </div>
+              )
+            ) : (
+              <div className='rounded-lg border border-dashed p-8 text-center'>
+                <p className='text-muted-foreground text-sm'>
+                  No action plans configured yet. Add scenarios to define conditions and their
+                  corresponding actions.
+                </p>
+              </div>
+            )}
           </CardContent>
         </Card>
       </div>
diff --git a/src/features/tools/index.tsx b/src/features/tools/index.tsx
index 13fb838..3682c1d 100644
--- a/src/features/tools/index.tsx
+++ b/src/features/tools/index.tsx
@@ -2,6 +2,7 @@ import { useState } from 'react'
 import { useIntegrationsQuery } from '@/graphql/operations/operations.generated'
 import { Badge } from '@/components/ui/badge'
 import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'
+import { Skeleton } from '@/components/ui/skeleton'
 import { Page } from '@/components/page'
 import { HubSpotConnectModal } from '@/features/tools/components/hubspot-connect-modal'
 import { SlackConnectModal } from '@/features/tools/components/slack-connect-modal'
@@ -36,7 +37,7 @@ const ALL_INTEGRATIONS: Integration[] = [
 
 export function Tools() {
   const [openModal, setOpenModal] = useState('')
-  const { data: integrations } = useIntegrationsQuery()
+  const { data: integrations, loading } = useIntegrationsQuery()
 
   const apps = integrations?.integrations?.apps || []
 
@@ -65,10 +66,14 @@ export function Tools() {
                   )}
                   <CardTitle className='text-lg font-semibold'>{integration.name}</CardTitle>
                 </div>
-                {isConnected && (
-                  <Badge variant='default' className='bg-green-100 text-green-800'>
-                    Connected
-                  </Badge>
+                {loading ? (
+                  <Skeleton className='h-5 w-20 rounded-md' />
+                ) : (
+                  isConnected && (
+                    <Badge variant='default' className='bg-green-100 text-green-800'>
+                      Connected
+                    </Badge>
+                  )
                 )}
               </CardHeader>
               <CardContent>
diff --git a/src/routes/(auth)/route.tsx b/src/routes/(auth)/route.tsx
index 3622981..5aa168e 100644
--- a/src/routes/(auth)/route.tsx
+++ b/src/routes/(auth)/route.tsx
@@ -24,9 +24,7 @@ function ClerkAuthLayout() {
 
         {/* Footer */}
         <div className='mt-8 text-center'>
-          <p className='text-sm text-gray-500'>
-            Identify, qualify, and convert leads showing intent
-          </p>
+          <p className='text-sm text-gray-500'>GTM at the speed of thought</p>
         </div>
       </div>
     </div>

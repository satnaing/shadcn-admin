/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AuthenticatedRouteImport } from './routes/_authenticated/route'
import { Route as AuthenticatedIndexImport } from './routes/_authenticated/index'
import { Route as errors503Import } from './routes/(errors)/503'
import { Route as errors500Import } from './routes/(errors)/500'
import { Route as errors404Import } from './routes/(errors)/404'
import { Route as errors403Import } from './routes/(errors)/403'
import { Route as errors401Import } from './routes/(errors)/401'
import { Route as authSignUpImport } from './routes/(auth)/sign-up'
import { Route as authSignIn2Import } from './routes/(auth)/sign-in-2'
import { Route as authSignInImport } from './routes/(auth)/sign-in'
import { Route as authOtpImport } from './routes/(auth)/otp'
import { Route as authForgotPasswordImport } from './routes/(auth)/forgot-password'
import { Route as AuthenticatedUsersIndexImport } from './routes/_authenticated/users/index'
import { Route as AuthenticatedTasksIndexImport } from './routes/_authenticated/tasks/index'
import { Route as AuthenticatedReportsInventoryImport } from './routes/_authenticated/reports/inventory'
import { Route as AuthenticatedReportsHandoverImport } from './routes/_authenticated/reports/handover'
import { Route as AuthenticatedReportsAcquisitionImport } from './routes/_authenticated/reports/acquisition'
import { Route as AuthenticatedInventoryDevicesCategoriesImport } from './routes/_authenticated/inventory/devices-categories'
import { Route as AuthenticatedInventoryDevicesImport } from './routes/_authenticated/inventory/devices'
import { Route as AuthenticatedInventoryCartridgesCategoriesImport } from './routes/_authenticated/inventory/cartridges-categories'
import { Route as AuthenticatedInventoryCartridgesImport } from './routes/_authenticated/inventory/cartridges'
import { Route as AuthenticatedHandoverRequestsImport } from './routes/_authenticated/handover/requests'
import { Route as AuthenticatedHandoverHandoverListImport } from './routes/_authenticated/handover/handover-list'
import { Route as AuthenticatedDisposalRequestsImport } from './routes/_authenticated/disposal/requests'
import { Route as AuthenticatedDisposalDisposedDevicesImport } from './routes/_authenticated/disposal/disposed-devices'
import { Route as AuthenticatedDisposalDisposalRequestsListImport } from './routes/_authenticated/disposal/disposal-requests-list'
import { Route as AuthenticatedConfigurationsRolesImport } from './routes/_authenticated/configurations/roles'
import { Route as AuthenticatedConfigurationsDepartmentsImport } from './routes/_authenticated/configurations/departments'
import { Route as AuthenticatedAcquisitionWaitlistImport } from './routes/_authenticated/acquisition/waitlist'
import { Route as AuthenticatedAcquisitionRequestsImport } from './routes/_authenticated/acquisition/requests'
import { Route as AuthenticatedAcquisitionMyDevicesImport } from './routes/_authenticated/acquisition/my-devices'

// Create/Update Routes

const AuthenticatedRouteRoute = AuthenticatedRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedIndexRoute = AuthenticatedIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)

const errors503Route = errors503Import.update({
  id: '/(errors)/503',
  path: '/503',
  getParentRoute: () => rootRoute,
} as any)

const errors500Route = errors500Import.update({
  id: '/(errors)/500',
  path: '/500',
  getParentRoute: () => rootRoute,
} as any)

const errors404Route = errors404Import.update({
  id: '/(errors)/404',
  path: '/404',
  getParentRoute: () => rootRoute,
} as any)

const errors403Route = errors403Import.update({
  id: '/(errors)/403',
  path: '/403',
  getParentRoute: () => rootRoute,
} as any)

const errors401Route = errors401Import.update({
  id: '/(errors)/401',
  path: '/401',
  getParentRoute: () => rootRoute,
} as any)

const authSignUpRoute = authSignUpImport.update({
  id: '/(auth)/sign-up',
  path: '/sign-up',
  getParentRoute: () => rootRoute,
} as any)

const authSignIn2Route = authSignIn2Import.update({
  id: '/(auth)/sign-in-2',
  path: '/sign-in-2',
  getParentRoute: () => rootRoute,
} as any)

const authSignInRoute = authSignInImport.update({
  id: '/(auth)/sign-in',
  path: '/sign-in',
  getParentRoute: () => rootRoute,
} as any)

const authOtpRoute = authOtpImport.update({
  id: '/(auth)/otp',
  path: '/otp',
  getParentRoute: () => rootRoute,
} as any)

const authForgotPasswordRoute = authForgotPasswordImport.update({
  id: '/(auth)/forgot-password',
  path: '/forgot-password',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedUsersIndexRoute = AuthenticatedUsersIndexImport.update({
  id: '/users/',
  path: '/users/',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)

const AuthenticatedTasksIndexRoute = AuthenticatedTasksIndexImport.update({
  id: '/tasks/',
  path: '/tasks/',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)

const AuthenticatedReportsInventoryRoute =
  AuthenticatedReportsInventoryImport.update({
    id: '/reports/inventory',
    path: '/reports/inventory',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

const AuthenticatedReportsHandoverRoute =
  AuthenticatedReportsHandoverImport.update({
    id: '/reports/handover',
    path: '/reports/handover',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

const AuthenticatedReportsAcquisitionRoute =
  AuthenticatedReportsAcquisitionImport.update({
    id: '/reports/acquisition',
    path: '/reports/acquisition',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

const AuthenticatedInventoryDevicesCategoriesRoute =
  AuthenticatedInventoryDevicesCategoriesImport.update({
    id: '/inventory/devices-categories',
    path: '/inventory/devices-categories',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

const AuthenticatedInventoryDevicesRoute =
  AuthenticatedInventoryDevicesImport.update({
    id: '/inventory/devices',
    path: '/inventory/devices',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

const AuthenticatedInventoryCartridgesCategoriesRoute =
  AuthenticatedInventoryCartridgesCategoriesImport.update({
    id: '/inventory/cartridges-categories',
    path: '/inventory/cartridges-categories',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

const AuthenticatedInventoryCartridgesRoute =
  AuthenticatedInventoryCartridgesImport.update({
    id: '/inventory/cartridges',
    path: '/inventory/cartridges',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

const AuthenticatedHandoverRequestsRoute =
  AuthenticatedHandoverRequestsImport.update({
    id: '/handover/requests',
    path: '/handover/requests',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

const AuthenticatedHandoverHandoverListRoute =
  AuthenticatedHandoverHandoverListImport.update({
    id: '/handover/handover-list',
    path: '/handover/handover-list',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

const AuthenticatedDisposalRequestsRoute =
  AuthenticatedDisposalRequestsImport.update({
    id: '/disposal/requests',
    path: '/disposal/requests',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

const AuthenticatedDisposalDisposedDevicesRoute =
  AuthenticatedDisposalDisposedDevicesImport.update({
    id: '/disposal/disposed-devices',
    path: '/disposal/disposed-devices',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

const AuthenticatedDisposalDisposalRequestsListRoute =
  AuthenticatedDisposalDisposalRequestsListImport.update({
    id: '/disposal/disposal-requests-list',
    path: '/disposal/disposal-requests-list',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

const AuthenticatedConfigurationsRolesRoute =
  AuthenticatedConfigurationsRolesImport.update({
    id: '/configurations/roles',
    path: '/configurations/roles',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

const AuthenticatedConfigurationsDepartmentsRoute =
  AuthenticatedConfigurationsDepartmentsImport.update({
    id: '/configurations/departments',
    path: '/configurations/departments',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

const AuthenticatedAcquisitionWaitlistRoute =
  AuthenticatedAcquisitionWaitlistImport.update({
    id: '/acquisition/waitlist',
    path: '/acquisition/waitlist',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

const AuthenticatedAcquisitionRequestsRoute =
  AuthenticatedAcquisitionRequestsImport.update({
    id: '/acquisition/requests',
    path: '/acquisition/requests',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

const AuthenticatedAcquisitionMyDevicesRoute =
  AuthenticatedAcquisitionMyDevicesImport.update({
    id: '/acquisition/my-devices',
    path: '/acquisition/my-devices',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedRouteImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/forgot-password': {
      id: '/(auth)/forgot-password'
      path: '/forgot-password'
      fullPath: '/forgot-password'
      preLoaderRoute: typeof authForgotPasswordImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/otp': {
      id: '/(auth)/otp'
      path: '/otp'
      fullPath: '/otp'
      preLoaderRoute: typeof authOtpImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/sign-in': {
      id: '/(auth)/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof authSignInImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/sign-in-2': {
      id: '/(auth)/sign-in-2'
      path: '/sign-in-2'
      fullPath: '/sign-in-2'
      preLoaderRoute: typeof authSignIn2Import
      parentRoute: typeof rootRoute
    }
    '/(auth)/sign-up': {
      id: '/(auth)/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof authSignUpImport
      parentRoute: typeof rootRoute
    }
    '/(errors)/401': {
      id: '/(errors)/401'
      path: '/401'
      fullPath: '/401'
      preLoaderRoute: typeof errors401Import
      parentRoute: typeof rootRoute
    }
    '/(errors)/403': {
      id: '/(errors)/403'
      path: '/403'
      fullPath: '/403'
      preLoaderRoute: typeof errors403Import
      parentRoute: typeof rootRoute
    }
    '/(errors)/404': {
      id: '/(errors)/404'
      path: '/404'
      fullPath: '/404'
      preLoaderRoute: typeof errors404Import
      parentRoute: typeof rootRoute
    }
    '/(errors)/500': {
      id: '/(errors)/500'
      path: '/500'
      fullPath: '/500'
      preLoaderRoute: typeof errors500Import
      parentRoute: typeof rootRoute
    }
    '/(errors)/503': {
      id: '/(errors)/503'
      path: '/503'
      fullPath: '/503'
      preLoaderRoute: typeof errors503Import
      parentRoute: typeof rootRoute
    }
    '/_authenticated/': {
      id: '/_authenticated/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthenticatedIndexImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/acquisition/my-devices': {
      id: '/_authenticated/acquisition/my-devices'
      path: '/acquisition/my-devices'
      fullPath: '/acquisition/my-devices'
      preLoaderRoute: typeof AuthenticatedAcquisitionMyDevicesImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/acquisition/requests': {
      id: '/_authenticated/acquisition/requests'
      path: '/acquisition/requests'
      fullPath: '/acquisition/requests'
      preLoaderRoute: typeof AuthenticatedAcquisitionRequestsImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/acquisition/waitlist': {
      id: '/_authenticated/acquisition/waitlist'
      path: '/acquisition/waitlist'
      fullPath: '/acquisition/waitlist'
      preLoaderRoute: typeof AuthenticatedAcquisitionWaitlistImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/configurations/departments': {
      id: '/_authenticated/configurations/departments'
      path: '/configurations/departments'
      fullPath: '/configurations/departments'
      preLoaderRoute: typeof AuthenticatedConfigurationsDepartmentsImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/configurations/roles': {
      id: '/_authenticated/configurations/roles'
      path: '/configurations/roles'
      fullPath: '/configurations/roles'
      preLoaderRoute: typeof AuthenticatedConfigurationsRolesImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/disposal/disposal-requests-list': {
      id: '/_authenticated/disposal/disposal-requests-list'
      path: '/disposal/disposal-requests-list'
      fullPath: '/disposal/disposal-requests-list'
      preLoaderRoute: typeof AuthenticatedDisposalDisposalRequestsListImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/disposal/disposed-devices': {
      id: '/_authenticated/disposal/disposed-devices'
      path: '/disposal/disposed-devices'
      fullPath: '/disposal/disposed-devices'
      preLoaderRoute: typeof AuthenticatedDisposalDisposedDevicesImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/disposal/requests': {
      id: '/_authenticated/disposal/requests'
      path: '/disposal/requests'
      fullPath: '/disposal/requests'
      preLoaderRoute: typeof AuthenticatedDisposalRequestsImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/handover/handover-list': {
      id: '/_authenticated/handover/handover-list'
      path: '/handover/handover-list'
      fullPath: '/handover/handover-list'
      preLoaderRoute: typeof AuthenticatedHandoverHandoverListImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/handover/requests': {
      id: '/_authenticated/handover/requests'
      path: '/handover/requests'
      fullPath: '/handover/requests'
      preLoaderRoute: typeof AuthenticatedHandoverRequestsImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/inventory/cartridges': {
      id: '/_authenticated/inventory/cartridges'
      path: '/inventory/cartridges'
      fullPath: '/inventory/cartridges'
      preLoaderRoute: typeof AuthenticatedInventoryCartridgesImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/inventory/cartridges-categories': {
      id: '/_authenticated/inventory/cartridges-categories'
      path: '/inventory/cartridges-categories'
      fullPath: '/inventory/cartridges-categories'
      preLoaderRoute: typeof AuthenticatedInventoryCartridgesCategoriesImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/inventory/devices': {
      id: '/_authenticated/inventory/devices'
      path: '/inventory/devices'
      fullPath: '/inventory/devices'
      preLoaderRoute: typeof AuthenticatedInventoryDevicesImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/inventory/devices-categories': {
      id: '/_authenticated/inventory/devices-categories'
      path: '/inventory/devices-categories'
      fullPath: '/inventory/devices-categories'
      preLoaderRoute: typeof AuthenticatedInventoryDevicesCategoriesImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/reports/acquisition': {
      id: '/_authenticated/reports/acquisition'
      path: '/reports/acquisition'
      fullPath: '/reports/acquisition'
      preLoaderRoute: typeof AuthenticatedReportsAcquisitionImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/reports/handover': {
      id: '/_authenticated/reports/handover'
      path: '/reports/handover'
      fullPath: '/reports/handover'
      preLoaderRoute: typeof AuthenticatedReportsHandoverImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/reports/inventory': {
      id: '/_authenticated/reports/inventory'
      path: '/reports/inventory'
      fullPath: '/reports/inventory'
      preLoaderRoute: typeof AuthenticatedReportsInventoryImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/tasks/': {
      id: '/_authenticated/tasks/'
      path: '/tasks'
      fullPath: '/tasks'
      preLoaderRoute: typeof AuthenticatedTasksIndexImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/users/': {
      id: '/_authenticated/users/'
      path: '/users'
      fullPath: '/users'
      preLoaderRoute: typeof AuthenticatedUsersIndexImport
      parentRoute: typeof AuthenticatedRouteImport
    }
  }
}

// Create and export the route tree

interface AuthenticatedRouteRouteChildren {
  AuthenticatedIndexRoute: typeof AuthenticatedIndexRoute
  AuthenticatedAcquisitionMyDevicesRoute: typeof AuthenticatedAcquisitionMyDevicesRoute
  AuthenticatedAcquisitionRequestsRoute: typeof AuthenticatedAcquisitionRequestsRoute
  AuthenticatedAcquisitionWaitlistRoute: typeof AuthenticatedAcquisitionWaitlistRoute
  AuthenticatedConfigurationsDepartmentsRoute: typeof AuthenticatedConfigurationsDepartmentsRoute
  AuthenticatedConfigurationsRolesRoute: typeof AuthenticatedConfigurationsRolesRoute
  AuthenticatedDisposalDisposalRequestsListRoute: typeof AuthenticatedDisposalDisposalRequestsListRoute
  AuthenticatedDisposalDisposedDevicesRoute: typeof AuthenticatedDisposalDisposedDevicesRoute
  AuthenticatedDisposalRequestsRoute: typeof AuthenticatedDisposalRequestsRoute
  AuthenticatedHandoverHandoverListRoute: typeof AuthenticatedHandoverHandoverListRoute
  AuthenticatedHandoverRequestsRoute: typeof AuthenticatedHandoverRequestsRoute
  AuthenticatedInventoryCartridgesRoute: typeof AuthenticatedInventoryCartridgesRoute
  AuthenticatedInventoryCartridgesCategoriesRoute: typeof AuthenticatedInventoryCartridgesCategoriesRoute
  AuthenticatedInventoryDevicesRoute: typeof AuthenticatedInventoryDevicesRoute
  AuthenticatedInventoryDevicesCategoriesRoute: typeof AuthenticatedInventoryDevicesCategoriesRoute
  AuthenticatedReportsAcquisitionRoute: typeof AuthenticatedReportsAcquisitionRoute
  AuthenticatedReportsHandoverRoute: typeof AuthenticatedReportsHandoverRoute
  AuthenticatedReportsInventoryRoute: typeof AuthenticatedReportsInventoryRoute
  AuthenticatedTasksIndexRoute: typeof AuthenticatedTasksIndexRoute
  AuthenticatedUsersIndexRoute: typeof AuthenticatedUsersIndexRoute
}

const AuthenticatedRouteRouteChildren: AuthenticatedRouteRouteChildren = {
  AuthenticatedIndexRoute: AuthenticatedIndexRoute,
  AuthenticatedAcquisitionMyDevicesRoute:
    AuthenticatedAcquisitionMyDevicesRoute,
  AuthenticatedAcquisitionRequestsRoute: AuthenticatedAcquisitionRequestsRoute,
  AuthenticatedAcquisitionWaitlistRoute: AuthenticatedAcquisitionWaitlistRoute,
  AuthenticatedConfigurationsDepartmentsRoute:
    AuthenticatedConfigurationsDepartmentsRoute,
  AuthenticatedConfigurationsRolesRoute: AuthenticatedConfigurationsRolesRoute,
  AuthenticatedDisposalDisposalRequestsListRoute:
    AuthenticatedDisposalDisposalRequestsListRoute,
  AuthenticatedDisposalDisposedDevicesRoute:
    AuthenticatedDisposalDisposedDevicesRoute,
  AuthenticatedDisposalRequestsRoute: AuthenticatedDisposalRequestsRoute,
  AuthenticatedHandoverHandoverListRoute:
    AuthenticatedHandoverHandoverListRoute,
  AuthenticatedHandoverRequestsRoute: AuthenticatedHandoverRequestsRoute,
  AuthenticatedInventoryCartridgesRoute: AuthenticatedInventoryCartridgesRoute,
  AuthenticatedInventoryCartridgesCategoriesRoute:
    AuthenticatedInventoryCartridgesCategoriesRoute,
  AuthenticatedInventoryDevicesRoute: AuthenticatedInventoryDevicesRoute,
  AuthenticatedInventoryDevicesCategoriesRoute:
    AuthenticatedInventoryDevicesCategoriesRoute,
  AuthenticatedReportsAcquisitionRoute: AuthenticatedReportsAcquisitionRoute,
  AuthenticatedReportsHandoverRoute: AuthenticatedReportsHandoverRoute,
  AuthenticatedReportsInventoryRoute: AuthenticatedReportsInventoryRoute,
  AuthenticatedTasksIndexRoute: AuthenticatedTasksIndexRoute,
  AuthenticatedUsersIndexRoute: AuthenticatedUsersIndexRoute,
}

const AuthenticatedRouteRouteWithChildren =
  AuthenticatedRouteRoute._addFileChildren(AuthenticatedRouteRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof AuthenticatedRouteRouteWithChildren
  '/forgot-password': typeof authForgotPasswordRoute
  '/otp': typeof authOtpRoute
  '/sign-in': typeof authSignInRoute
  '/sign-in-2': typeof authSignIn2Route
  '/sign-up': typeof authSignUpRoute
  '/401': typeof errors401Route
  '/403': typeof errors403Route
  '/404': typeof errors404Route
  '/500': typeof errors500Route
  '/503': typeof errors503Route
  '/': typeof AuthenticatedIndexRoute
  '/acquisition/my-devices': typeof AuthenticatedAcquisitionMyDevicesRoute
  '/acquisition/requests': typeof AuthenticatedAcquisitionRequestsRoute
  '/acquisition/waitlist': typeof AuthenticatedAcquisitionWaitlistRoute
  '/configurations/departments': typeof AuthenticatedConfigurationsDepartmentsRoute
  '/configurations/roles': typeof AuthenticatedConfigurationsRolesRoute
  '/disposal/disposal-requests-list': typeof AuthenticatedDisposalDisposalRequestsListRoute
  '/disposal/disposed-devices': typeof AuthenticatedDisposalDisposedDevicesRoute
  '/disposal/requests': typeof AuthenticatedDisposalRequestsRoute
  '/handover/handover-list': typeof AuthenticatedHandoverHandoverListRoute
  '/handover/requests': typeof AuthenticatedHandoverRequestsRoute
  '/inventory/cartridges': typeof AuthenticatedInventoryCartridgesRoute
  '/inventory/cartridges-categories': typeof AuthenticatedInventoryCartridgesCategoriesRoute
  '/inventory/devices': typeof AuthenticatedInventoryDevicesRoute
  '/inventory/devices-categories': typeof AuthenticatedInventoryDevicesCategoriesRoute
  '/reports/acquisition': typeof AuthenticatedReportsAcquisitionRoute
  '/reports/handover': typeof AuthenticatedReportsHandoverRoute
  '/reports/inventory': typeof AuthenticatedReportsInventoryRoute
  '/tasks': typeof AuthenticatedTasksIndexRoute
  '/users': typeof AuthenticatedUsersIndexRoute
}

export interface FileRoutesByTo {
  '/forgot-password': typeof authForgotPasswordRoute
  '/otp': typeof authOtpRoute
  '/sign-in': typeof authSignInRoute
  '/sign-in-2': typeof authSignIn2Route
  '/sign-up': typeof authSignUpRoute
  '/401': typeof errors401Route
  '/403': typeof errors403Route
  '/404': typeof errors404Route
  '/500': typeof errors500Route
  '/503': typeof errors503Route
  '/': typeof AuthenticatedIndexRoute
  '/acquisition/my-devices': typeof AuthenticatedAcquisitionMyDevicesRoute
  '/acquisition/requests': typeof AuthenticatedAcquisitionRequestsRoute
  '/acquisition/waitlist': typeof AuthenticatedAcquisitionWaitlistRoute
  '/configurations/departments': typeof AuthenticatedConfigurationsDepartmentsRoute
  '/configurations/roles': typeof AuthenticatedConfigurationsRolesRoute
  '/disposal/disposal-requests-list': typeof AuthenticatedDisposalDisposalRequestsListRoute
  '/disposal/disposed-devices': typeof AuthenticatedDisposalDisposedDevicesRoute
  '/disposal/requests': typeof AuthenticatedDisposalRequestsRoute
  '/handover/handover-list': typeof AuthenticatedHandoverHandoverListRoute
  '/handover/requests': typeof AuthenticatedHandoverRequestsRoute
  '/inventory/cartridges': typeof AuthenticatedInventoryCartridgesRoute
  '/inventory/cartridges-categories': typeof AuthenticatedInventoryCartridgesCategoriesRoute
  '/inventory/devices': typeof AuthenticatedInventoryDevicesRoute
  '/inventory/devices-categories': typeof AuthenticatedInventoryDevicesCategoriesRoute
  '/reports/acquisition': typeof AuthenticatedReportsAcquisitionRoute
  '/reports/handover': typeof AuthenticatedReportsHandoverRoute
  '/reports/inventory': typeof AuthenticatedReportsInventoryRoute
  '/tasks': typeof AuthenticatedTasksIndexRoute
  '/users': typeof AuthenticatedUsersIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_authenticated': typeof AuthenticatedRouteRouteWithChildren
  '/(auth)/forgot-password': typeof authForgotPasswordRoute
  '/(auth)/otp': typeof authOtpRoute
  '/(auth)/sign-in': typeof authSignInRoute
  '/(auth)/sign-in-2': typeof authSignIn2Route
  '/(auth)/sign-up': typeof authSignUpRoute
  '/(errors)/401': typeof errors401Route
  '/(errors)/403': typeof errors403Route
  '/(errors)/404': typeof errors404Route
  '/(errors)/500': typeof errors500Route
  '/(errors)/503': typeof errors503Route
  '/_authenticated/': typeof AuthenticatedIndexRoute
  '/_authenticated/acquisition/my-devices': typeof AuthenticatedAcquisitionMyDevicesRoute
  '/_authenticated/acquisition/requests': typeof AuthenticatedAcquisitionRequestsRoute
  '/_authenticated/acquisition/waitlist': typeof AuthenticatedAcquisitionWaitlistRoute
  '/_authenticated/configurations/departments': typeof AuthenticatedConfigurationsDepartmentsRoute
  '/_authenticated/configurations/roles': typeof AuthenticatedConfigurationsRolesRoute
  '/_authenticated/disposal/disposal-requests-list': typeof AuthenticatedDisposalDisposalRequestsListRoute
  '/_authenticated/disposal/disposed-devices': typeof AuthenticatedDisposalDisposedDevicesRoute
  '/_authenticated/disposal/requests': typeof AuthenticatedDisposalRequestsRoute
  '/_authenticated/handover/handover-list': typeof AuthenticatedHandoverHandoverListRoute
  '/_authenticated/handover/requests': typeof AuthenticatedHandoverRequestsRoute
  '/_authenticated/inventory/cartridges': typeof AuthenticatedInventoryCartridgesRoute
  '/_authenticated/inventory/cartridges-categories': typeof AuthenticatedInventoryCartridgesCategoriesRoute
  '/_authenticated/inventory/devices': typeof AuthenticatedInventoryDevicesRoute
  '/_authenticated/inventory/devices-categories': typeof AuthenticatedInventoryDevicesCategoriesRoute
  '/_authenticated/reports/acquisition': typeof AuthenticatedReportsAcquisitionRoute
  '/_authenticated/reports/handover': typeof AuthenticatedReportsHandoverRoute
  '/_authenticated/reports/inventory': typeof AuthenticatedReportsInventoryRoute
  '/_authenticated/tasks/': typeof AuthenticatedTasksIndexRoute
  '/_authenticated/users/': typeof AuthenticatedUsersIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/forgot-password'
    | '/otp'
    | '/sign-in'
    | '/sign-in-2'
    | '/sign-up'
    | '/401'
    | '/403'
    | '/404'
    | '/500'
    | '/503'
    | '/'
    | '/acquisition/my-devices'
    | '/acquisition/requests'
    | '/acquisition/waitlist'
    | '/configurations/departments'
    | '/configurations/roles'
    | '/disposal/disposal-requests-list'
    | '/disposal/disposed-devices'
    | '/disposal/requests'
    | '/handover/handover-list'
    | '/handover/requests'
    | '/inventory/cartridges'
    | '/inventory/cartridges-categories'
    | '/inventory/devices'
    | '/inventory/devices-categories'
    | '/reports/acquisition'
    | '/reports/handover'
    | '/reports/inventory'
    | '/tasks'
    | '/users'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/forgot-password'
    | '/otp'
    | '/sign-in'
    | '/sign-in-2'
    | '/sign-up'
    | '/401'
    | '/403'
    | '/404'
    | '/500'
    | '/503'
    | '/'
    | '/acquisition/my-devices'
    | '/acquisition/requests'
    | '/acquisition/waitlist'
    | '/configurations/departments'
    | '/configurations/roles'
    | '/disposal/disposal-requests-list'
    | '/disposal/disposed-devices'
    | '/disposal/requests'
    | '/handover/handover-list'
    | '/handover/requests'
    | '/inventory/cartridges'
    | '/inventory/cartridges-categories'
    | '/inventory/devices'
    | '/inventory/devices-categories'
    | '/reports/acquisition'
    | '/reports/handover'
    | '/reports/inventory'
    | '/tasks'
    | '/users'
  id:
    | '__root__'
    | '/_authenticated'
    | '/(auth)/forgot-password'
    | '/(auth)/otp'
    | '/(auth)/sign-in'
    | '/(auth)/sign-in-2'
    | '/(auth)/sign-up'
    | '/(errors)/401'
    | '/(errors)/403'
    | '/(errors)/404'
    | '/(errors)/500'
    | '/(errors)/503'
    | '/_authenticated/'
    | '/_authenticated/acquisition/my-devices'
    | '/_authenticated/acquisition/requests'
    | '/_authenticated/acquisition/waitlist'
    | '/_authenticated/configurations/departments'
    | '/_authenticated/configurations/roles'
    | '/_authenticated/disposal/disposal-requests-list'
    | '/_authenticated/disposal/disposed-devices'
    | '/_authenticated/disposal/requests'
    | '/_authenticated/handover/handover-list'
    | '/_authenticated/handover/requests'
    | '/_authenticated/inventory/cartridges'
    | '/_authenticated/inventory/cartridges-categories'
    | '/_authenticated/inventory/devices'
    | '/_authenticated/inventory/devices-categories'
    | '/_authenticated/reports/acquisition'
    | '/_authenticated/reports/handover'
    | '/_authenticated/reports/inventory'
    | '/_authenticated/tasks/'
    | '/_authenticated/users/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AuthenticatedRouteRoute: typeof AuthenticatedRouteRouteWithChildren
  authForgotPasswordRoute: typeof authForgotPasswordRoute
  authOtpRoute: typeof authOtpRoute
  authSignInRoute: typeof authSignInRoute
  authSignIn2Route: typeof authSignIn2Route
  authSignUpRoute: typeof authSignUpRoute
  errors401Route: typeof errors401Route
  errors403Route: typeof errors403Route
  errors404Route: typeof errors404Route
  errors500Route: typeof errors500Route
  errors503Route: typeof errors503Route
}

const rootRouteChildren: RootRouteChildren = {
  AuthenticatedRouteRoute: AuthenticatedRouteRouteWithChildren,
  authForgotPasswordRoute: authForgotPasswordRoute,
  authOtpRoute: authOtpRoute,
  authSignInRoute: authSignInRoute,
  authSignIn2Route: authSignIn2Route,
  authSignUpRoute: authSignUpRoute,
  errors401Route: errors401Route,
  errors403Route: errors403Route,
  errors404Route: errors404Route,
  errors500Route: errors500Route,
  errors503Route: errors503Route,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_authenticated",
        "/(auth)/forgot-password",
        "/(auth)/otp",
        "/(auth)/sign-in",
        "/(auth)/sign-in-2",
        "/(auth)/sign-up",
        "/(errors)/401",
        "/(errors)/403",
        "/(errors)/404",
        "/(errors)/500",
        "/(errors)/503"
      ]
    },
    "/_authenticated": {
      "filePath": "_authenticated/route.tsx",
      "children": [
        "/_authenticated/",
        "/_authenticated/acquisition/my-devices",
        "/_authenticated/acquisition/requests",
        "/_authenticated/acquisition/waitlist",
        "/_authenticated/configurations/departments",
        "/_authenticated/configurations/roles",
        "/_authenticated/disposal/disposal-requests-list",
        "/_authenticated/disposal/disposed-devices",
        "/_authenticated/disposal/requests",
        "/_authenticated/handover/handover-list",
        "/_authenticated/handover/requests",
        "/_authenticated/inventory/cartridges",
        "/_authenticated/inventory/cartridges-categories",
        "/_authenticated/inventory/devices",
        "/_authenticated/inventory/devices-categories",
        "/_authenticated/reports/acquisition",
        "/_authenticated/reports/handover",
        "/_authenticated/reports/inventory",
        "/_authenticated/tasks/",
        "/_authenticated/users/"
      ]
    },
    "/(auth)/forgot-password": {
      "filePath": "(auth)/forgot-password.tsx"
    },
    "/(auth)/otp": {
      "filePath": "(auth)/otp.tsx"
    },
    "/(auth)/sign-in": {
      "filePath": "(auth)/sign-in.tsx"
    },
    "/(auth)/sign-in-2": {
      "filePath": "(auth)/sign-in-2.tsx"
    },
    "/(auth)/sign-up": {
      "filePath": "(auth)/sign-up.tsx"
    },
    "/(errors)/401": {
      "filePath": "(errors)/401.tsx"
    },
    "/(errors)/403": {
      "filePath": "(errors)/403.tsx"
    },
    "/(errors)/404": {
      "filePath": "(errors)/404.tsx"
    },
    "/(errors)/500": {
      "filePath": "(errors)/500.tsx"
    },
    "/(errors)/503": {
      "filePath": "(errors)/503.tsx"
    },
    "/_authenticated/": {
      "filePath": "_authenticated/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/acquisition/my-devices": {
      "filePath": "_authenticated/acquisition/my-devices.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/acquisition/requests": {
      "filePath": "_authenticated/acquisition/requests.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/acquisition/waitlist": {
      "filePath": "_authenticated/acquisition/waitlist.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/configurations/departments": {
      "filePath": "_authenticated/configurations/departments.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/configurations/roles": {
      "filePath": "_authenticated/configurations/roles.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/disposal/disposal-requests-list": {
      "filePath": "_authenticated/disposal/disposal-requests-list.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/disposal/disposed-devices": {
      "filePath": "_authenticated/disposal/disposed-devices.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/disposal/requests": {
      "filePath": "_authenticated/disposal/requests.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/handover/handover-list": {
      "filePath": "_authenticated/handover/handover-list.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/handover/requests": {
      "filePath": "_authenticated/handover/requests.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/inventory/cartridges": {
      "filePath": "_authenticated/inventory/cartridges.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/inventory/cartridges-categories": {
      "filePath": "_authenticated/inventory/cartridges-categories.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/inventory/devices": {
      "filePath": "_authenticated/inventory/devices.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/inventory/devices-categories": {
      "filePath": "_authenticated/inventory/devices-categories.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/reports/acquisition": {
      "filePath": "_authenticated/reports/acquisition.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/reports/handover": {
      "filePath": "_authenticated/reports/handover.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/reports/inventory": {
      "filePath": "_authenticated/reports/inventory.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/tasks/": {
      "filePath": "_authenticated/tasks/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/users/": {
      "filePath": "_authenticated/users/index.tsx",
      "parent": "/_authenticated"
    }
  }
}
ROUTE_MANIFEST_END */
